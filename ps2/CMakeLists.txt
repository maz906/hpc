cmake_minimum_required(VERSION 2.8)
project(cs6230_omp)

set(SOURCE "src")
set(INC "include")
set(BIN "bin")
set(TEST "test")

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/${BIN})
set(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/${BIN})

FIND_PACKAGE( OpenMP REQUIRED)
if(OPENMP_FOUND)
  message("OPENMP FOUND")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -O4")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c99 -O3 -fopenmp")

# add all files ...
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/${INC})
add_library(util ${CMAKE_CURRENT_SOURCE_DIR}/${SOURCE}/util.c)
add_library(scan ${CMAKE_CURRENT_SOURCE_DIR}/${SOURCE}/scan.c)
target_link_libraries(scan util m) 
add_library(scan_time ${CMAKE_CURRENT_SOURCE_DIR}/${SOURCE}/scan_time.c)
target_link_libraries(scan_time scan util) 
add_library(scan_test ${CMAKE_CURRENT_SOURCE_DIR}/${SOURCE}/scan_test.c)
target_link_libraries(scan_test scan util) 
add_library(qsort ${CMAKE_CURRENT_SOURCE_DIR}/${SOURCE}/qsort.c)
target_link_libraries(qsort util scan)
add_library(qsort_time ${CMAKE_CURRENT_SOURCE_DIR}/${SOURCE}/qsort_time.c)
target_link_libraries(qsort_time qsort util)
add_library(qsort_test ${CMAKE_CURRENT_SOURCE_DIR}/${SOURCE}/qsort_test.c)
target_link_libraries(qsort_test qsort util m)
add_executable(main_test ${CMAKE_CURRENT_SOURCE_DIR}/${SOURCE}/main_test.c)
target_link_libraries(main_test qsort_test scan_test util qsort)
add_executable(main_time ${CMAKE_CURRENT_SOURCE_DIR}/${SOURCE}/main_time.c)
target_link_libraries(main_time qsort_time scan_time util qsort)
